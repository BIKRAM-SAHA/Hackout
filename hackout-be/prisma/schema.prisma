generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model patient {
  pk_patient_id Int     @id @unique(map: "pk_patient_id") @default(autoincrement())
  age           String  @db.VarChar(255)
  doctor_name   String? @db.VarChar(255)
  email         String  @db.VarChar(255)
  fk_doctor_id  Int?
  name          String  @db.VarChar(255)
  password      String  @db.VarChar(255)
  token         String? @db.Text
  doctor        doctor? @relation(fields: [fk_doctor_id], references: [pk_doctor_id], onDelete: Cascade, map: "patient_doctor_id")
  disease       disease[]
  map_tracker_patient map_tracker_patient[]
  map_contraction_patient map_contraction_patient[]
  nutrition      nutrition[]
  @@index([fk_doctor_id], map: "patient_doctor_id")
}

model doctor {
  pk_doctor_id Int     @id @unique(map: "pk_doctor_id") @default(autoincrement())
  name         String  @db.VarChar(255)
  age          String  @db.VarChar(255)
  email        String  @db.VarChar(255)
  password     String  @db.VarChar(255)
  token        String? @db.Text
  patient      patient[]
}

model disease {
  pk_disease_id Int      @id @unique(map: "pk_disease_id") @default(autoincrement())
  fk_patient_id Int
  disease_name  String?  @db.VarChar(255)
  drug_name     String?  @db.VarChar(255)
  side_effect   String?  @db.VarChar(255)
  patient       patient? @relation(fields: [fk_patient_id], references: [pk_patient_id], onDelete: Cascade, map: "patient_disease_id")
  @@index([fk_patient_id], map: "disease_patient_id")
}

model tracker {
  pk_tracker_id   Int     @id @unique(map: "pk_tracker_id") @default(autoincrement())
  gestational_age Int?
  weight          Int?
  belly_size      Int?
  blood_pressure  Int?
  fundal_height   Int?
  fetal_movement  Int?
  edema           String?
  heart_rate      Int?
  map_tracker_patient map_tracker_patient[]
}

model map_tracker_patient {
  id            Int @id @unique(map: "pk_map_tracker_patient_id") @default(autoincrement())
  fk_patient_id Int
  fk_tracker_id Int
  patient       patient? @relation(fields: [fk_patient_id], references: [pk_patient_id], onDelete: Cascade, map: "patient_map_patient_id")
  tracker       tracker? @relation(fields: [fk_tracker_id], references: [pk_tracker_id], onDelete: Cascade, map: "patient_tracker_id")
  @@index([fk_patient_id], map: "patient_map_patient_id")
  @@index([fk_tracker_id], map: "patient_tracker_id")
}

model contraction {
  pk_contraction_id Int    @id @unique(map: "pk_contraction_id") @default(autoincrement())
  timmings          String @db.VarChar(255)
  map_contraction_patient map_contraction_patient[]
}

model map_contraction_patient {
  id                Int @id @unique(map: "pk_map_contraction_patient_id") @default(autoincrement())
  fk_patient_id     Int
  fk_contraction_id Int
  patient       patient? @relation(fields: [fk_patient_id], references: [pk_patient_id], onDelete: Cascade, map: "map_patient_contraction_id")
  contraction   contraction? @relation(fields: [fk_contraction_id], references: [pk_contraction_id], onDelete: Cascade, map: "patient_map_contraction_patient_id")
  @@index([fk_contraction_id], map: "map_patient_contraction_id")
  @@index([fk_patient_id], map: "patient_map_contraction_patient_id")
}

model nutrition{
  pk_nutrition_id Int    @id @unique(map: "pk_nutrition_id") @default(autoincrement())
  weight          Int    
  height          Int    
  bmi             Int    
  normal_scale    Int?
  category        String?
  week_no         Int
  trimester       Int
  fk_patient_id   Int
  patient       patient? @relation(fields: [fk_patient_id], references: [pk_patient_id], onDelete: Cascade, map: "map_patient_nutrition_id")
  @@index([fk_patient_id], map: "map_patient_nutrition_id")
}